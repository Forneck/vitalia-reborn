                .v~
               .(W      ';;'    ';' ,,   ,      ,;;  ';;   ,,
              /<M.       ;;     ,'  ''  ,;      ''    ;;   ''
\~b__________/$@|\--------;;   ,'  ';; ';;'' .,'';.   ;;  ';;  .,'';.-------.
 >@)$$$$$$$$($( )#H>======';, ,'    ;;  ;;   '' ,;;   ;;   ;;  '' ,;;===----->
/_p~~~~~~~~~~\$@|/---------';;;     ;;  ;;   .,' ;;   ;;   ;;  .,' ;;-------'
              \<M`           ;     ,;;, ';,' ';,';;.',;;, ,;;, ';,';;.'
               `(B
_________________`?____________________[ Referência para Criação de Áreas ]___

Autores: Juliano Ravasi Ferraz <blug@mud.linkway.com.br>
	 Ana Carolina Cyrino <nemesis@mud.linkway.com.br>

$Id: zone.txt,v 1.13 2003/07/30 19:20:13 jrf Exp $

################################################################################
 Áreas
################################################################################

   Os arquivos de áreas controlam como as áreas são configuradas, e como é o
processo de recolocação (reset) da área.  Eles integram as salas, monstros e
objetos para criar um mundo habitado.

   Os arquivos de áreas contém informações básicas sobre a área, seguido de
vários comandos que definem o que deve ser feito para construir a área, e a
cada recolocação da mesma.

   Os elementos do arquivo de área são dispostos desta forma:

------------------------
 #<vnum>
 <nome>~
 <topo> <vida> <modo> <flags>
 [climas]
 {comandos}
 S
------------------------

   VNUM
   O número que representa a área.  O número da área geralmente é o número da
primeira sala dividido por 100.  Por exemplo, Midgaard, que consiste das salas
de número 3000 até 3099, é a área 30.

   NOME
   O nome da área.

   TOPO
   É o número da sala mais alta da área.  É usado para, internamente, definir
onde termina uma área e começa a seguinte.  Por exemplo, a primeira sala da
Zona Newbie é 18600, e a última sala é 18647, mas todo o bloco 186xx foi
reservado para esta área, então o valor desse campo para a Zona Newbie deverá
ser 18699.

   VIDA
   É o tempo em minutos (da vida real) que leva para que a área seja
recolocada.  Ao atingir este tempo, todos os comandos do arquivo de área são
re-executados, a fim de recarregar os monstros e objetos nas salas que compõe
a área.

   MODO
   É o modo como a área será recolocada.  Pode ter os valores 0, 1 e 2, sendo:

   0  Nunca recolocar a área.  Neste caso, o tempo de vida da área não é
      usado.  A área só é recolocada uma única vez, quando o MUD se inicia.

   1  A área será recolocada após atingir seu tempo de vida, e após tornar-se
      deserta.  Isto torna a área mais "honesta", porque irá evitar que
      monstros difíceis apareçam até que todos deixem a área.  Em áreas muito
      movimentadas, isso pode impedir que esta seja recolocada.

   2  Recoloca a área assim que ela atingir seu tempo de vida, independente de
      haver ou não pessoas nela.  Este é o modo mais comum.

   FLAGS
   Define as flags especiais da área.  As flags especiais são descritas mais
adiante, na seção "Flags".

   CLIMAS
   Caso você queira que esta área tenha um clima diferente do padrão do jogo,
você deve especificar aqui uma seção especial do arquivo contendo algumas
informações que definirão estes parâmetros.  O formato desta seção é explicado
logo adiante em "Climas".

   COMANDOS
   Define os comandos que serão executados a cada recolocação da área.  Os
comandos são descritos mais adiante, na seção "Comandos".


================================================================================
 Flags
--------------------------------------------------------------------------------

   a. CLOSED (1)
   A área é fechada.  Não será possível usar magias de transporte ('portal' e
'teleport') para chegar até ela.

   b. ISOLATED (2)
   A área é isolada.  Não será possível usar magias de transporte ('portal' e
'teleport') para entrar ou sair da área, mas poderá ser usado dentro da mesma
área.

   c. !RECALL (4)
   Não será possível usar a magia 'word of recall' para sair da área.

   d. !SUMMON (8)
   Não será possível convocar um personagem para dentro ou para fora da área.

   e. !LOAD (16)
   Se um jogador digitar QUIT dentro dessa área, ele será enviado para a
sala inicial quando retornar ao jogo, e não para a sala salva.

   f. SEPARATE (32)
   Separa as sub-áreas umas das outras.  Isso faz com que os comandos WHERE e
SHOUT encontrem jogadores dentro da mesma sub-área, ao invés da área toda.

   g. CLIMATE (64)
   Define que o arquivo possui uma seção definindo os climas da área, logo
após as flags.


================================================================================
 Climas
--------------------------------------------------------------------------------

   O VitaliaMUD possui um sistema de clima baseado em pressão atmosférica e
temperatura, que permite 5 estados possíveis: céu aberto, nublado, chovendo,
trovejando e nevando.  Geralmente, o clima do jogo todo é homogêneo, ou seja,
se em uma determinada área está chovendo, isso significa que em todas as
outras áreas também está chovendo.  Contudo, é possível dizer que uma
determinada área terá seu próprio clima, independente do resto do jogo.

   Para isso, você deve especificar a flag CLIMATE (g, 64) no campo de flags,
e adicionar uma seção especial ao arquivo de área.  Quando a flag e esta seção
são omitidas, a área terá o mesmo clima que o resto do jogo.

------------------------
 C <subárea> <tipo>
 ...
 S
------------------------

   Essa seção adicional deve vir logo após a linha que contém os campos TOPO,
VIDA, MODO e FLAGS.  Essa seção consiste de um ou mais comandos 'C', onde cada
um especifica o clima de uma subárea ou da área toda; e termina com um comando
'S'.  Note que esse 'S' não é o mesmo usado para terminar o arquivo de área,
que deverá vir depois dos comandos de recolocação da área.

   Os campos do comando 'C' são:

   SUBÁREA
   O número da subárea que você quer definir o clima.  Por enquanto, o único
valor possível para este campo é zero, para especificar o clima da área toda.

   TIPO
   O tipo do clima da área ou subárea.  Deve ser um nome de acordo com a
seguinte tabela:

	Tipo       | Pressão  | Umid | Vent | Temp
	-----------+----------+------+------+----------
	0. NEUTRAL | 1000 ±15 | 0.50 | 0.00 | 25 ±4 °C
	1. WINDY   | 1000 ±20 | 0.40 | 0.98 | 22 ±2 °C
	2. RAINY   |  980 ±10 | 0.75 | 0.20 | 20 ±2 °C
	3. SNOWY   |  975 ± 5 | 0.25 | 0.50 | -5 ±2 °C
	4. DESERT  | 1025 ± 5 | 0.02 | 0.50 | 45 ±3 °C

   O tipo NEUTRAL é o mesmo tipo de clima do resto do jogo.


================================================================================
 Comandos
--------------------------------------------------------------------------------

   Cada comando consiste de uma letra, identificando o tipo de comando,
seguido de três ou quatro campos.  O primeiro campo, comum a todos os
comandos, é chamado de "flag-condicional".  Se a flag-condicional para um
comando for 1, o comando apenas será executado se o comando imediatamente
anterior for executado com sucesso.  Se a flag-condicional for 0, o comando
será sempre executado.  As flags-condicionais são úteis para, por exemplo,
equipar monstros: você não poderá equipar um monstro se você não conseguir
carregá-lo.

   Os comandos que carregam monstros e objetos também incluem um campo
"limite", que define o número máximo de cópias que podem existir para aquele
objeto ou monstro no mundo todo.  Se o número de cópias já existentes for
maior ou igual ao valor do limite, o comando não é executado.

   Os comandos reconhecidos atualmente pelo VitaliaMUD são:

   M: Carregar um monstro.
   Formato: M <flag-condicional> <vnum-mob> <limite> <vnum-sala>
      VNUM-MOB é o número que identifica o monstro.  VNUM-SALA é o número que
      identifica a sala onde o monstro será carregado.

   O: Carregar um objeto.
   Formato: O <flag-condicional> <vnum-obj> <limite> <vnum-sala>
      VNUM-OBJ é o número que identifica o objeto.  VNUM-SALA é o número que
      identifica a sala onde o objeto será carregado.  O objeto será deixado
      no chão da sala.

   G: Dar um objeto para o monstro.
   Formato: G <flag-condicional> <vnum-obj> <limite>
      VNUM-OBJ é o número que identifica o objeto.  O objeto será carregado e
      será colocado no inventário do último monstro criado com o comando "M".

   E: Equipar um objeto no monstro.
   Formato: E <flag-condicional> <vnum-obj> <limite> <posição>
      VNUM-OBJ é o número que identifica o objeto.  POSIÇÃO é um número que
      identifica a posição no corpo, sendo um dos seguintes:
       0  Usar como luz
       1  Usar no dedo anelar direito
       2  Usar no dedo anelar esquerdo
       3  Primeiro objeto em volta do pescoço
       4  Segundo objeto em volta do pescoço
       5  Vestir no corpo
       6  Vestir na cabeça
       7  Vestir nas pernas
       8  Calçar nos pés
       9  Vestir nas mãos
      10  Vestir nos braços
      11  Usar como escudo
      12  Vestir sobre o corpo
      13  Usar em volta da cintura
      14  Usar no pulso direito
      15  Usar no pulso esquerdo
      16  Empunhar
      17  Segurar
      18  Usar como asas
      19  Usar na orelha direita
      20  Usar na orelha esquerda
      21  Usar no rosto
      22  Usar no nariz
      23  Usar como insígnia

   P: Colocar um objeto dentro de outro
   Formato: P <flag-condicional> <vnum-obj-1> <limite> <vnum-obj-2>
      Um objeto identificado por VNUM-OBJ-1 será carregado e posto dentro do
      último objeto identificado por VNUM-OBJ-2.

   D: Ajustar o estado de uma porta
   Formato: D <flag-condicional> <vnum-sala> <saída> <estado>
      VNUM-SALA é o número da sala que possui a porta a ser ajustada.  SAÍDA é
      o número que identifica a porta, definida no arquivo de salas.  ESTADO é
      o estado que a porta deverá obter, sendo:
       0  Aberta
       1  Fechada
       2  Fechada e trancada
      Tome cuidado de ajustar ambos os lados da porta corretamente.  Fechar a
      saída norte de uma sala NÃO fecha automaticamente a saída sul da sala
      adjacente.

   R: Remover objeto da sala
   Formato: R <flag-condicional> <vnum-sala> <vnum-obj>
      Se um objeto identificado com VNUM-OBJ existir na sala identificada com
      VNUM-SALA, ele será retirado da sala e destruído.

   N: Verificar a presença de um monstro em uma sala
   Formato: C <flag-condicional> <vnum-sala> <vnum-mob>
      Esse comando não faz nada, só verifica se o mob VNUM-MOB está carregado
      e presente na sala VNUM-SALA. Se ele estiver carregado, esse comando
      resultará em um "não-sucesso". Isso quer dizer que o próximo comando
      pode ter a flag-condicional igual a um, para que não seja executado.
      Isso é útil para evitar que mobs sejam carregados em duplicidade em uma
      mesma sala.

   Qualquer linha que iniciar com um asterisco ('*') será considerado como um
comentário, e não será processada.  Também será ignorado qualquer texto que
for escrito na frente dos campos numéricos.


================================================================================
 Exemplo
--------------------------------------------------------------------------------

#18
O Paraíso~
1899 30 2 bd
*
* Colocar os monstros
*
M 0 1897 1 1897     colocar o guardião na entrada
G 1 1895 1          entregar a chave ao guardião
E 1 1892 1 16       entregar a arma ao guardião
*
* Colocar os objetos
*
R 0 1895 1881       retirar a fonte de água
O 0 1881 1 1895     carregar uma nova fonte de água
R 0 1892 1883       retirar o baú
O 0 1883 1 1892	    carregar um novo baú
P 1 1884 1 1883     carregar o tesouro dentro do baú
*
* Ajustar as passagens
*
D 0 1897 0 2        fechar os portões do paraíso (lado de fora)
D 0 1898 2 2	    fechar os portões do paraíso (lado de dentro)
S


-> Faça com calma esse arquivo...  Para criar uma área, costuma-se fazer um
rascunho dela ou em um pedaço de papel ou desenhar no computador mesmo.
Quando for fazer o .zon, vá em cada sala, veja calmamente o que deseja por
nela, verifique as portas e assim, aos poucos, faça seu arquivo.  Erra-se
menos dessa maneira e fica muito mais fácil de corrigir.  Também costume
escrever especificando o que cada comando deve fazer, pois isso também
minimiza erros e ajuda em possíveis alterações futuras.
