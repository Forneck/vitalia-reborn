static void list_one_char(struct char_data *i, struct char_data *ch)
{
	struct obj_data *furniture;
	char art;

 const char *positionsm[] = {
    " está caído aqui, morto.",
    " está caído aqui, mortalmente ferido.",
    " está caído aqui, incapacitado.",
    " está caído aqui, atordoado.",
    " está em um transe profundo, meditando.",
    " está dormindo aqui.",
    " está descansando aqui.",
    " está sentado aqui.",
    "!FIGHTING!",
    " está em pé aqui."
  };
  const char *fly_positionsm[] = {
    " está flutuando aqui, morto.",
    " está flutuando aqui, mortalmente ferido.",
    " está flutuando aqui, incapacitado.",
    " está flutuando aqui, atordoado.",
    " está em um transe profundo, meditando enquanto levita.",
    " está aqui, dormindo no ar.",
    " está aqui, descansando no ar.",
    " está aqui, sentado no ar.",
    "!FIGHTING!",
    " está voando aqui."
  };

 const char *positionsf[] = {
    " está caída aqui, morta.",
    " está caída aqui, mortalmente ferida.",
    " está caída aqui, incapacitada.",
    " está caída aqui, atordoada.",
    " está em um transe profundo, meditando.",
    " está dormindo aqui.",
    " está descansando aqui.",
    " está sentada aqui.",
    "!FIGHTING!",
    " está em pé aqui."
  };
  const char *fly_positionsf[] = {
    " está flutuando aqui, morta.",
    " está flutuando aqui, mortalmente ferida.",
    " está flutuando aqui, incapacitada.",
    " está flutuando aqui, atordoada.",
    " está em um transe profundo, meditando enquanto levita.",
    " está aqui, dormindo no ar.",
    " está aqui, descansando no ar.",
    " está aqui, sentado no ar.",
    "!FIGHTING!",
    " está voando aqui."
  };

	if (!IS_NPC(ch) && PRF_FLAGGED(ch, PRF_SHOWVNUMS))
	{
		if (IS_NPC(i))
			send_to_char(ch, "[%d] ", GET_MOB_VNUM(i));
		if (SCRIPT(i) && TRIGGERS(SCRIPT(i)))
		{
			if (!TRIGGERS(SCRIPT(i))->next)
				send_to_char(ch, "[T%d] ", GET_TRIG_VNUM(TRIGGERS(SCRIPT(i))));
			else
				send_to_char(ch, "[TRIGS] ");
		}
	}

	if (GROUP(i))
	{
		if (GROUP(i) == GROUP(ch))
			send_to_char(ch, "(%s%s%s) ", CBGRN(ch, C_NRM),
						 GROUP_LEADER(GROUP(i)) == i ? "líder" : "grupo", CCNRM(ch, C_NRM));
		else
			send_to_char(ch, "(%s%s%s) ", CBRED(ch, C_NRM),
						 GROUP_LEADER(GROUP(i)) == i ? "líder" : "grupo", CCNRM(ch, C_NRM));
	}

	if (IS_NPC(i) && i->player.long_descr && GET_POS(i) == GET_DEFAULT_POS(i))
	{
		if (AFF_FLAGGED(i, AFF_INVISIBLE))
			send_to_char(ch, "*");

		if (AFF_FLAGGED(ch, AFF_DETECT_ALIGN))
		{
			if (IS_EVIL(i))
				send_to_char(ch, "%s(Aura Vermelha) ", CBRED(ch, C_NRM));
			else if (IS_GOOD(i))
				send_to_char(ch, "%s(Aura Azul) ", CBBLU(ch, C_NRM));
		}
		send_to_char(ch, "%s%s", CCYEL(ch, C_NRM), i->player.long_descr);


	if (IS_NPC(i))
		send_to_char(ch, "%c%s", UPPER(*i->player.short_descr), i->player.short_descr + 1);
		else{
//	  if (IS_DEAD(i))
//		send_to_char(ch, "O espírito de ");
	send_to_char(ch, "%s %s%s", i->player.name,  * GET_TITLE(i) ? " " : "",
				 GET_TITLE(i));
		}


	if (AFF_FLAGGED(ch, AFF_DETECT_ALIGN))
	{
		if (IS_EVIL(i))
			send_to_char(ch, " (Aura Vermelha)");
		else if (IS_GOOD(i))
			send_to_char(ch, " (Aura Azul)");
	}
	send_to_char(ch, "\r\n");
	
				if (AFF_FLAGGED(i, AFF_SANCTUARY))
			act("@W...$l brilha com uma luz branca!@n", FALSE, i, 0, ch, TO_VICT);
		else if (AFF_FLAGGED(i, AFF_GLOOMSHIELD))
			act("@L...$l é resguardad$r por um espesso escudo de trevas!@n", FALSE, i, 0, ch,
				TO_VICT);
		if (AFF_FLAGGED(i, AFF_FIRESHIELD))
			act("@R...$l está envolvid$r por uma aura de fogo!@n", FALSE, i, 0, ch, TO_VICT);
		if (AFF_FLAGGED(i, AFF_BLIND))
			act("@w...$l está tateando ao redor, ceg$r!@n", FALSE, i, 0, ch, TO_VICT);
		if (AFF_FLAGGED(i, AFF_FIREFLIES))
			act("@G...$l está rodead$r por vaga-lumes!@n", FALSE, i, 0, ch, TO_VICT);
		if (AFF_FLAGGED(i, AFF_THISTLECOAT))
			act("@y...$l está protegid$r por uma barreira espinhos!@n", FALSE, i, 0, ch, TO_VICT);
		if (AFF_FLAGGED(i, AFF_SOUNDBARRIER))
			act("@c...$l está envolt$r por uma protetora barreira de som!@n", FALSE, i, 0, ch,
				TO_VICT);
		
}